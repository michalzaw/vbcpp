# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  win: circleci/windows@4.1.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-on-linux:
    machine:
      image: ubuntu-2004:current
    resource_class: large

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: echo 'Hello, Linux'
      - run:
          name: Show environment
          command: ls -l
      - run:
          name: Show environment details
          command: ls -lR
      - run:
          name: Show system info
          command: |
              cmake -version
              make -version
              glxinfo | grep "OpenGL version"
      - run:
          name: Run CMake
          command: |
              mkdir build
              cd build
              cmake ..
      - run:
          name: Show generated project files
          command: |
              cd  build
              ls -l
      - run:
          name: Build project
          command: |
              cd build
              make
      - run:
          name: Show build artifacts
          command: |
              cd bin
              ls -l
      - run:
          name: Prepare final files
          command: |
              mkdir vbcpp

              cp -r bin/Buses vbcpp
              cp -r bin/Buses vbcpp
              cp -r bin/Data vbcpp
              cp -r bin/Displays vbcpp
              cp -r bin/fonts vbcpp
              cp -r bin/Maps vbcpp
              cp -r bin/Objects vbcpp
              cp -r bin/Parts vbcpp
              cp -r bin/RoadProfiles vbcpp
              cp -r bin/Shaders vbcpp
              cp -r bin/Skybox vbcpp
              cp bin/vbcpp vbcpp
              cp bin/editor vbcpp
              cp bin/brdfLut.png vbcpp
              cp bin/doroff.bmp vbcpp
              cp bin/game.xml vbcpp
              cp bin/matryca16.csv vbcpp

              tar -zcvf vbcpp.tar.gz vbcpp

      # See: https://circleci.com/docs/artifacts
      - store_artifacts:
          path: vbcpp.tar.gz
          destination: vbcpp.tar.gz

  build-on-windows:
    # See: https://circleci.com/docs/using-windows
    executor:
      name: win/default
      size: large
      
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: Write-Host 'Hello, Windows'
      - run:
          name: Show environment
          command: Get-ChildItem
      - run:
          name: Show environment details
          command: Get-ChildItem -Recurse
      # See: https://discuss.circleci.com/t/windows-build-with-cmake/34652/2
      - run:
          name: Install CMake
          command: |
              choco install cmake -y
      - run:
          name: Generate VS Project files
          command: |
              $env:Path+=";C:\Program Files\CMake\bin";
              New-Item -Path 'build' -ItemType Directory
              cmake -G"Visual Studio 16 2019" -B build
      - run:
          name: Show generated VS Project files
          command: |
              cd  build
              Get-ChildItem
      # See: https://stackoverflow.com/questions/2124753/how-can-i-use-powershell-with-the-visual-studio-command-prompt
      - run:
          name: Prepare VS Build Tools
          command: |
              pushd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build"
              cmd /c "vcvars64.bat&set" |
              foreach {
                if ($_ -match "=") {
                  $v = $_.split("="); set-item -force -path "ENV:\$($v[0])"  -value "$($v[1])"
                }
              }
              popd
      - run:
          name: Build project
          command: |
              cd build
              msbuild VBCPP.sln /property:Configuration=Release
      - run:
          name: Show build artifacts
          command: |
              cd bin/Release
              Get-ChildItem
      - run:
          name: Prepare final files
          command: |
              New-Item -Path 'vbcpp-bin' -ItemType Directory

              Copy-Item bin\Buses -Destination vbcpp-bin -Recurse
              Copy-Item bin\Data -Destination vbcpp-bin -Recurse
              Copy-Item bin\Displays -Destination vbcpp-bin -Recurse
              Copy-Item bin\fonts -Destination vbcpp-bin -Recurse
              Copy-Item bin\Maps -Destination vbcpp-bin -Recurse
              Copy-Item bin\Objects -Destination vbcpp-bin -Recurse
              Copy-Item bin\Parts -Destination vbcpp-bin -Recurse
              Copy-Item bin\RoadProfiles -Destination vbcpp-bin -Recurse
              Copy-Item bin\Shaders -Destination vbcpp-bin -Recurse
              Copy-Item bin\Skybox -Destination vbcpp-bin -Recurse
              Copy-Item bin\Release\*.dll -Destination vbcpp-bin
              Copy-Item bin\Release\vbcpp.exe -Destination vbcpp-bin
              Copy-Item bin\Release\editor.exe -Destination vbcpp-bin
              Copy-Item bin\brdfLut.png -Destination vbcpp-bin
              Copy-Item bin\doroff.bmp -Destination vbcpp-bin
              Copy-Item bin\game.xml -Destination vbcpp-bin
              Copy-Item bin\matryca16.csv -Destination vbcpp-bin

              Compress-Archive -Path vbcpp-bin\* -Destination vbcpp.zip

      # See: https://circleci.com/docs/artifacts
      - store_artifacts:
          path: vbcpp.zip
          destination: vbcpp.zip

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      #- build-on-windows:
      #    # See: https://support.circleci.com/hc/en-us/articles/115015953868-Filter-workflows-by-branch-
      #    filters:
      #      branches:
      #        only:
      #          - master
      #          - develop
      #          - circleci-project-setup
      - build-on-linux:
          # See: https://support.circleci.com/hc/en-us/articles/115015953868-Filter-workflows-by-branch-
          filters:
            branches:
              only:
                - master
                - develop
                - circleci-project-setup
